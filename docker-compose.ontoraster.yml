version: "3.8"

services:
  rasdatabase:
    container_name: rasdatabase
    build:
      context: rasdatabase
    environment:
      POSTGRES_USER: petauser
      POSTGRES_PASSWORD: petapasswd
      # petascopedb is the default database name for rasdaman
      # vectordb will store other geospatial vector data
      POSTGRES_DB: petascopedb
      POSTGRES_MULTIPLE_DATABASES: petascopedb, vectordb
    ports:
      - "${MAPPED_POSTGRES_PORT}:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -h rasdatabase" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - rasdaman-network
    extra_hosts:
      - "host.docker.internal:host-gateway"

  rasdaman:
    container_name: rasdaman
    build:
      context: rasdaman
    # TODO: test
#    healthcheck:
#      test: [ "CMD", "curl", "-f", "http://localhost:8080/rasdaman/ows" ]
#      interval: 30s
#      timeout: 10s
#      retries: 5
#      start_period: 30s
    ports:
      - "${RASDAMAN_SERVER_PORT}:8080"
    networks:
      - rasdaman-network
    extra_hosts:
      - "host.docker.internal:host-gateway"

  ontop:
    #TODO: Update with custom image supporting rasdaman functions
    image: ontop/ontop:5.1.2
    env_file: .env
    restart: unless-stopped
    environment:
      ONTOP_ONTOLOGY_FILE: /opt/ontop/input/OntoRaster.owx
      ONTOP_XML_CATALOG_FILE: /opt/ontop/input/catalog-v001.xml
      ONTOP_MAPPING_FILE: /opt/ontop/input/OntoRaster.obda
      ONTOP_PROPERTIES_FILE: /opt/ontop/input/OntoRaster.properties
      ONTOP_PORTAL_FILE: /opt/ontop/input/OntoRaster.toml
      ONTOP_CORS_ALLOWED_ORIGINS: "*"
      ONTOP_DEV_MODE: "true"
    volumes:
      - ./vkg:/opt/ontop/input
      - ./jdbc:/opt/ontop/jdbc
      #- ./wait-for-it:/opt/wait-for-it
    depends_on:
      rasdaman:
        condition: service_healthy
    ports:
      - "${ONTOP_SERVER_PORT}:8080"
    networks:
      - rasdaman-network
    extra_hosts:
      - "host.docker.internal:host-gateway"


networks:
  rasdaman-network:
    name: rasdaman-network

